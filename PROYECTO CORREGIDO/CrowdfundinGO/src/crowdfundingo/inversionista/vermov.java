/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crowdfundingo.inversionista;

import crowdfundingo.controladores.globalvars;
import java.awt.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Henry Ruiz
 */
public class vermov extends javax.swing.JFrame {

    /**
     * Creates new form buscaproye
     */
    public vermov() {
        initComponents();
        setIconImage(getIconImage());
        opciones.add(reembolsados);
        opciones.add(activos);
    }

    /**
     *
     * @return
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("res/ico.png"));
        return retValue;
    }
/**
 * Constructor de Clase.
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
 */    
    public void llenarTablaProy() throws SQLException, ClassNotFoundException {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(globalvars.conn,"crowdfundingo","12345");
        con.setSchema("CROWDFUNDINGO");
        Statement s = con.createStatement();
        s.executeQuery("SELECT ID, MONTO, FECHA, REEMBOLSADO FROM MOVIMIENTOS WHERE ID_INV="+globalvars.id+" AND REEMBOLSADO='NO'");
        ResultSet rs = s.getResultSet();
        System.out.println(rs);
        ProyTables.setModel(DbUtils.resultSetToTableModel(rs));
    }
/**
 * Constructor de Clase.
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
 */    
    public void llenarTablaProyReem() throws SQLException, ClassNotFoundException {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(globalvars.conn,"crowdfundingo","12345");
        con.setSchema("CROWDFUNDINGO");
        Statement s = con.createStatement();
        s.executeQuery("SELECT ID, MONTO, FECHA, REEMBOLSADO FROM MOVIMIENTOS WHERE ID_INV="+globalvars.id+" AND REEMBOLSADO='SI'");
        ResultSet rs = s.getResultSet();
        System.out.println(rs);
        ProyTables.setModel(DbUtils.resultSetToTableModel(rs));
    }
/**
 * Constructor de Clase.
     * @param ID
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
 */    
    public void reembolso(int ID) throws SQLException, ClassNotFoundException{
        Class.forName("oracle.jdbc.driver.OracleDriver");
        Connection con = DriverManager.getConnection(globalvars.conn,"crowdfundingo","12345");
        con.setSchema("CROWDFUNDINGO");
        Statement s = con.createStatement();
        String idproy="",dinero="", idbancuenta="", dineroreem="";
        String reqidmov="SELECT * FROM MOVIMIENTOS WHERE ID="+ID;
        System.out.println(reqidmov);
        s.execute(reqidmov);
        ResultSet rsidmov = s.getResultSet();
        while (rsidmov.next()) {
            idproy = rsidmov.getString("ID_PROYECTO");
            idbancuenta=rsidmov.getString("ID_BANCUENTA");
            dineroreem=rsidmov.getString("MONTO");
        }
        String reqdinproy="SELECT DINERO FROM PROYECTO WHERE ID="+idproy;
        s.execute(reqdinproy);
        ResultSet rsdinmov = s.getResultSet();
        while (rsdinmov.next()) {
            dinero=rsdinmov.getString("DINERO");
        }
        int total=Integer.valueOf(dinero)-Integer.valueOf(dineroreem);
        String actualizadin="UPDATE PROYECTO "
                + "SET DINERO="+total
                +" WHERE ID="+idproy;
        String actualizaestado="UPDATE MOVIMIENTOS "
                + "SET REEMBOLSADO='SI' WHERE ID="+ID;
        String insertareem="INSERT INTO REEMBOLSOS (ID, ID_BANCUENTA, MONTO, FECHA) "+
                "VALUES ("+ID+","+
                        idbancuenta+","+
                        dinero+","+
                        "CURRENT_DATE)";
        System.out.println("\nID: "+ID+
                "\nSentencia SQL insercción de movimiento: "+insertareem+
                "\nCuenta bancaria: "+idbancuenta+
                "\nDinero recolectado: "+reqdinproy+
                "\nDonación a reembolsar: "+dinero+
                "\nDinero total después de donación: "+total+
                "\nSentencia SQL reembolso efectuado: "+actualizadin+
                "\nSentencia SQL Actualizar estado de movimiento: "+actualizaestado);
        s.execute(insertareem);
        s.execute(actualizadin);
        s.execute(actualizaestado);
        llenarTablaProy();
        JOptionPane.showMessageDialog(null, "Reembolso efectuado");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opciones = new javax.swing.ButtonGroup();
        lblenun1 = new javax.swing.JLabel();
        id_entr = new javax.swing.JTextField();
        reembolsar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProyTables = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jPanel1 = new javax.swing.JPanel();
        reembolsados = new javax.swing.JRadioButton();
        activos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ver movimientos en la cuenta");
        setMaximumSize(new java.awt.Dimension(635, 515));
        setMinimumSize(new java.awt.Dimension(635, 515));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblenun1.setText("Escriba el ID del movimiento:");

        reembolsar.setText("Pedir reembolso");
        reembolsar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reembolsarActionPerformed(evt);
            }
        });

        ProyTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MONTO", "FECHA", "¿REEMBOLSADO?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProyTables.setColumnSelectionAllowed(true);
        ProyTables.setDoubleBuffered(true);
        ProyTables.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProyTables.getTableHeader().setResizingAllowed(false);
        ProyTables.getTableHeader().setReorderingAllowed(false);
        ProyTables.setUpdateSelectionOnSort(false);
        ProyTables.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(ProyTables);
        ProyTables.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (ProyTables.getColumnModel().getColumnCount() > 0) {
            ProyTables.getColumnModel().getColumn(0).setResizable(false);
            ProyTables.getColumnModel().getColumn(1).setResizable(false);
            ProyTables.getColumnModel().getColumn(2).setResizable(false);
            ProyTables.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Movimientos"));

        reembolsados.setText("Reembolsados");
        reembolsados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                reembolsadosItemStateChanged(evt);
            }
        });

        activos.setSelected(true);
        activos.setText("Activos");
        activos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                activosItemStateChanged(evt);
            }
        });
        activos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activos, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reembolsados)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reembolsados)
                    .addComponent(activos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblenun1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id_entr, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reembolsar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblenun1)
                            .addComponent(id_entr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reembolsar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
 * Constructor de Clase.
 */    
    private void reembolsarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reembolsarActionPerformed
        int opcion=JOptionPane.showConfirmDialog(null, "Confirmación", "¿Desea reembolsar?",JOptionPane.YES_NO_OPTION);
        if(opcion==JOptionPane.YES_OPTION){
            try {
                reembolso(Integer.valueOf(id_entr.getText()));
            } catch (SQLException ex) {
                Logger.getLogger(vermov.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Operación no permitida");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(vermov.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            System.out.println("Reembolso no efectuado.");
        }
    }//GEN-LAST:event_reembolsarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            llenarTablaProy();
        } catch (SQLException | NullPointerException | ClassNotFoundException ex) {
            Logger.getLogger(vermov.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void activosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activosActionPerformed

    private void activosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_activosItemStateChanged
        if(activos.isSelected()==true){
            try {
                llenarTablaProy();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(vermov.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_activosItemStateChanged

    private void reembolsadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_reembolsadosItemStateChanged
        if(reembolsados.isSelected()==true){
            try {
                llenarTablaProyReem();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(vermov.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_reembolsadosItemStateChanged

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        try {
            llenarTablaProy();
        } catch (SQLException | NullPointerException | ClassNotFoundException ex) {
            Logger.getLogger(vermov.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vermov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new vermov().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ProyTables;
    private javax.swing.JRadioButton activos;
    public javax.swing.JTextField id_entr;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblenun1;
    private javax.swing.ButtonGroup opciones;
    private javax.swing.JRadioButton reembolsados;
    private javax.swing.JButton reembolsar;
    // End of variables declaration//GEN-END:variables
}
